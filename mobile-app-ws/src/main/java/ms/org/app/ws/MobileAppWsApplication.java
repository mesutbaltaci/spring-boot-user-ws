package ms.org.app.ws;

import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.boot.builder.SpringApplicationBuilder;
import org.springframework.boot.web.servlet.support.SpringBootServletInitializer;
import org.springframework.context.annotation.Bean;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;

import ms.org.app.ws.security.AppProperties;

@SpringBootApplication
public class MobileAppWsApplication extends SpringBootServletInitializer{

	
	
	@Override
	protected SpringApplicationBuilder configure(SpringApplicationBuilder builder) {
		
		return builder.sources(MobileAppWsApplication.class);
	}

	public static void main(String[] args) {
		SpringApplication.run(MobileAppWsApplication.class, args);
	}
	
	@Bean
	public BCryptPasswordEncoder bCryptPasswordEncoder() {
		return new BCryptPasswordEncoder();
	}
	
	@Bean
	public SpringApplicationContext springApplicationContext() {
		return new SpringApplicationContext();
	}

	@Bean("AppProperties")
	public AppProperties getAppProperties() {
		return new AppProperties();
	}
}



/**
to run app without STS
	on command line, mvn install
	mvn spring-boot:run
	
	after created context path the app will work on http://localhost:8080/mobile-app-ws/users?page=0&limit=3
	
	the jar file that generated by maven is under C:\Users\mesut\git\repository\mobile-app-ws\target
	
	the jar file can be run using java -jar mobile-app-ws-0.0.1-SNAPSHOT.jar command on cmd
	
	to generate war file extend MobileAppWsApplication from SpringBootServletInitializer
	then override SpringApplicationBuilder in MobileAppWsApplication
	then change pom.xml file jar as war inside <packaging> tag
	then add dependency spring-boot-starter-tomcat
	
	then mvn clean
	mvn install, it will generate war file.
	
	install apache tomcat
	localhost:8080/manager/html
	
	deploy the war file.

*/